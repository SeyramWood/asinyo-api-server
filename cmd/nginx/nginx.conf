user nginx;

worker_processes  auto;
# can handle 1000 concurrent connections
events {
    worker_connections   1000;
}

http {

    # Define limit zone
    limit_req_zone $request_uri zone=APIZONE:10m rate=1r/s;
    # Buffer size for post submission
    client_body_buffer_size 10k;
    client_max_body_size 10M;
    # Buffer size for headers
    client_header_buffer_size 1k;
    # Max time to receive client headers/body size for headers
    client_body_timeout 60;
    client_header_timeout 60;
    # Max time to keep a connection open for
    keepalive_timeout 60;
    # Max time for client accept/receive a response
    send_timeout 60;
    # Skip buffering for static files
    sendfile on;
    # Optimise sendfile packets
    tcp_nopush on;


    #Virtual Host
    server {
      # listens the requests coming on port 8080
      listen 8000;

      access_log  off;
      server_tokens off;
      add_header X-Frame-Options "SAMEORIGIN";
      add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
      add_header X-XSS-Protection "1; mode=block";
      add_header X-Content-Type-Options "nosniff";
      add_header Content-Security-Policy "default-src 'self'; img-src *; http: https: data: blob: 'unsafe-inline'" always;
      add_header Referrer-Policy "strict-origin";

      location / {
        limit_req zone=APIZONE  burst=60 nodelay;
        proxy_http_version 1.1;
        proxy_connect_timeout 1200s;
        proxy_send_timeout 1200s;
        proxy_read_timeout 1200s;
        fastcgi_send_timeout 1200s;
        fastcgi_read_timeout 1200s;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # resolves the IP of api using Docker internal DNS
        proxy_pass http://api:9000;


      }
    }
}
