version: "3.9"

#services describe the containers that will start
services:
  # api is the container name for our Go API
  api:
    # It will look for a Dockerfile in the project root and build it
    build:
      context: .
      target: dev
    # Exposes the port 8000 from a container and binds it to a random port
    ports:
      - "9000"
    # If the container goes down, it will restart
    restart: "always"
    # Connects the API to a common api.network bridge
    volumes:
      - .:/app
      - ./mnt/public:/app/public
      - ./mnt/cache:/app/mnt/cache
    env_file:
      - ./.env
    networks:
      - "api.network"
    #    # Starts up 5 replicas of the same image
    #    deploy:
    #      replicas: 5
    depends_on:
      - db
  db:
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: asinyoDB@123
    volumes:
      - ./cmd/scripts:/docker-entrypoint-initdb.d/:rw
      - ./mnt/mysql:/var/lib/mysql
    expose:
      - 3306
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --interactive_timeout=1048576, --max_connections=1024, --log-warnings=1]
    networks:
      - "api.network"
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 10000:80
    environment:
      - PMA_ARBITRARY=1
    volumes:
      - /sessions
      - ~/docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
    depends_on:
      - db
    networks:
      - "api.network"
  nginx:
    # specifies the latest nginx image
    image: nginx:latest
    # Connects the conf file of the container to the conf file in our folder
    volumes:
      - ./cmd/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    # It will start up the nginx only when all api containers have started
    depends_on:
      - api
    # Connects the port 80 of the nginx container to localhost:80 or localhost
    ports:
      - "8000:8000"
    networks:
      - "api.network"

networks:
  api.network:
volumes:
  mysql:
  public:
  cache: