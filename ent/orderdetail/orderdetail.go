// Code generated by entc, DO NOT EDIT.

package orderdetail

import (
	"time"
)

const (
	// Label holds the string label denoting the orderdetail type in the database.
	Label = "order_detail"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldPromoPrice holds the string denoting the promo_price field in the database.
	FieldPromoPrice = "promo_price"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// EdgeOrder holds the string denoting the order edge name in mutations.
	EdgeOrder = "Order"
	// EdgeProduct holds the string denoting the product edge name in mutations.
	EdgeProduct = "product"
	// EdgeStore holds the string denoting the store edge name in mutations.
	EdgeStore = "store"
	// Table holds the table name of the orderdetail in the database.
	Table = "order_details"
	// OrderTable is the table that holds the Order relation/edge.
	OrderTable = "order_details"
	// OrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderInverseTable = "orders"
	// OrderColumn is the table column denoting the Order relation/edge.
	OrderColumn = "order_details"
	// ProductTable is the table that holds the product relation/edge.
	ProductTable = "order_details"
	// ProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductInverseTable = "products"
	// ProductColumn is the table column denoting the product relation/edge.
	ProductColumn = "product_orders"
	// StoreTable is the table that holds the store relation/edge.
	StoreTable = "order_details"
	// StoreInverseTable is the table name for the MerchantStore entity.
	// It exists in this package in order to avoid circular dependency with the "merchantstore" package.
	StoreInverseTable = "merchant_stores"
	// StoreColumn is the table column denoting the store relation/edge.
	StoreColumn = "merchant_store_orders"
)

// Columns holds all SQL columns for orderdetail fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldPrice,
	FieldPromoPrice,
	FieldAmount,
	FieldQuantity,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "order_details"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"merchant_store_orders",
	"order_details",
	"product_orders",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultPrice holds the default value on creation for the "price" field.
	DefaultPrice float64
	// DefaultPromoPrice holds the default value on creation for the "promo_price" field.
	DefaultPromoPrice float64
	// DefaultAmount holds the default value on creation for the "amount" field.
	DefaultAmount float64
	// DefaultQuantity holds the default value on creation for the "quantity" field.
	DefaultQuantity int
)
