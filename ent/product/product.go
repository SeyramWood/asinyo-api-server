// Code generated by entc, DO NOT EDIT.

package product

import (
	"time"
)

const (
	// Label holds the string label denoting the product type in the database.
	Label = "product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldPromoPrice holds the string denoting the promoprice field in the database.
	FieldPromoPrice = "promo_price"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// EdgeMajor holds the string denoting the major edge name in mutations.
	EdgeMajor = "major"
	// EdgeMinor holds the string denoting the minor edge name in mutations.
	EdgeMinor = "minor"
	// EdgeMechant holds the string denoting the mechant edge name in mutations.
	EdgeMechant = "mechant"
	// EdgeSupplier holds the string denoting the supplier edge name in mutations.
	EdgeSupplier = "supplier"
	// EdgeRetailer holds the string denoting the retailer edge name in mutations.
	EdgeRetailer = "retailer"
	// Table holds the table name of the product in the database.
	Table = "products"
	// MajorTable is the table that holds the major relation/edge. The primary key declared below.
	MajorTable = "product_category_major_products"
	// MajorInverseTable is the table name for the ProductCategoryMajor entity.
	// It exists in this package in order to avoid circular dependency with the "productcategorymajor" package.
	MajorInverseTable = "product_category_majors"
	// MinorTable is the table that holds the minor relation/edge. The primary key declared below.
	MinorTable = "product_category_minor_products"
	// MinorInverseTable is the table name for the ProductCategoryMinor entity.
	// It exists in this package in order to avoid circular dependency with the "productcategoryminor" package.
	MinorInverseTable = "product_category_minors"
	// MechantTable is the table that holds the mechant relation/edge.
	MechantTable = "merchants"
	// MechantInverseTable is the table name for the Merchant entity.
	// It exists in this package in order to avoid circular dependency with the "merchant" package.
	MechantInverseTable = "merchants"
	// MechantColumn is the table column denoting the mechant relation/edge.
	MechantColumn = "merchant_products"
	// SupplierTable is the table that holds the supplier relation/edge.
	SupplierTable = "supplier_merchants"
	// SupplierInverseTable is the table name for the SupplierMerchant entity.
	// It exists in this package in order to avoid circular dependency with the "suppliermerchant" package.
	SupplierInverseTable = "supplier_merchants"
	// SupplierColumn is the table column denoting the supplier relation/edge.
	SupplierColumn = "supplier_merchant_products"
	// RetailerTable is the table that holds the retailer relation/edge.
	RetailerTable = "retail_merchants"
	// RetailerInverseTable is the table name for the RetailMerchant entity.
	// It exists in this package in order to avoid circular dependency with the "retailmerchant" package.
	RetailerInverseTable = "retail_merchants"
	// RetailerColumn is the table column denoting the retailer relation/edge.
	RetailerColumn = "retail_merchant_products"
)

// Columns holds all SQL columns for product fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldName,
	FieldPrice,
	FieldPromoPrice,
	FieldDescription,
	FieldImage,
}

var (
	// MajorPrimaryKey and MajorColumn2 are the table columns denoting the
	// primary key for the major relation (M2M).
	MajorPrimaryKey = []string{"product_category_major_id", "product_id"}
	// MinorPrimaryKey and MinorColumn2 are the table columns denoting the
	// primary key for the minor relation (M2M).
	MinorPrimaryKey = []string{"product_category_minor_id", "product_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultPrice holds the default value on creation for the "Price" field.
	DefaultPrice float64
	// DefaultPromoPrice holds the default value on creation for the "PromoPrice" field.
	DefaultPromoPrice float64
	// DescriptionValidator is a validator for the "Description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
	// ImageValidator is a validator for the "Image" field. It is called by the builders before save.
	ImageValidator func(string) error
)
