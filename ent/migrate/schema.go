// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
	}
	// AgentsColumns holds the columns for the "agents" table.
	AgentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
		{Name: "ghana_card", Type: field.TypeString, Unique: true},
		{Name: "last_name", Type: field.TypeString},
		{Name: "other_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "other_phone", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "address", Type: field.TypeString},
		{Name: "digital_address", Type: field.TypeString},
	}
	// AgentsTable holds the schema information for the "agents" table.
	AgentsTable = &schema.Table{
		Name:       "agents",
		Columns:    AgentsColumns,
		PrimaryKey: []*schema.Column{AgentsColumns[0]},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "other_phone", Type: field.TypeString, Nullable: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
	}
	// RetailMerchantsColumns holds the columns for the "retail_merchants" table.
	RetailMerchantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
		{Name: "ghana_card", Type: field.TypeString, Unique: true},
		{Name: "last_name", Type: field.TypeString},
		{Name: "other_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "other_phone", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "address", Type: field.TypeString},
		{Name: "digital_address", Type: field.TypeString},
	}
	// RetailMerchantsTable holds the schema information for the "retail_merchants" table.
	RetailMerchantsTable = &schema.Table{
		Name:       "retail_merchants",
		Columns:    RetailMerchantsColumns,
		PrimaryKey: []*schema.Column{RetailMerchantsColumns[0]},
	}
	// SupplierMerchantsColumns holds the columns for the "supplier_merchants" table.
	SupplierMerchantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
		{Name: "ghana_card", Type: field.TypeString, Unique: true},
		{Name: "last_name", Type: field.TypeString},
		{Name: "other_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Unique: true},
		{Name: "other_phone", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "address", Type: field.TypeString},
		{Name: "digital_address", Type: field.TypeString},
	}
	// SupplierMerchantsTable holds the schema information for the "supplier_merchants" table.
	SupplierMerchantsTable = &schema.Table{
		Name:       "supplier_merchants",
		Columns:    SupplierMerchantsColumns,
		PrimaryKey: []*schema.Column{SupplierMerchantsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		AgentsTable,
		CustomersTable,
		RetailMerchantsTable,
		SupplierMerchantsTable,
		UsersTable,
	}
)

func init() {
}
