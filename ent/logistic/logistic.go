// Code generated by ent, DO NOT EDIT.

package logistic

import (
	"time"
)

const (
	// Label holds the string label denoting the logistic type in the database.
	Label = "logistic"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldTask holds the string denoting the task field in the database.
	FieldTask = "task"
	// EdgeOrder holds the string denoting the order edge name in mutations.
	EdgeOrder = "order"
	// EdgeStore holds the string denoting the store edge name in mutations.
	EdgeStore = "store"
	// Table holds the table name of the logistic in the database.
	Table = "logistics"
	// OrderTable is the table that holds the order relation/edge. The primary key declared below.
	OrderTable = "logistic_order"
	// OrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderInverseTable = "orders"
	// StoreTable is the table that holds the store relation/edge.
	StoreTable = "logistics"
	// StoreInverseTable is the table name for the MerchantStore entity.
	// It exists in this package in order to avoid circular dependency with the "merchantstore" package.
	StoreInverseTable = "merchant_stores"
	// StoreColumn is the table column denoting the store relation/edge.
	StoreColumn = "merchant_store_logistics"
)

// Columns holds all SQL columns for logistic fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldTask,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "logistics"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"merchant_store_logistics",
}

var (
	// OrderPrimaryKey and OrderColumn2 are the table columns denoting the
	// primary key for the order relation (M2M).
	OrderPrimaryKey = []string{"logistic_id", "order_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
